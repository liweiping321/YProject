//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Option: missing-value detection (*Specified/ShouldSerialize*/Reset*) enabled
    
// Generated from: proto/Match.proto
namespace proto.Match
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"PBStartMatchReq")]
  public partial class PBStartMatchReq : global::ProtoBuf.IExtensible
  {
    public PBStartMatchReq() {}
    
    private int _heroId;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"heroId", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int heroId
    {
      get { return _heroId; }
      set { _heroId = value; }
    }
    private int _fightingType;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"fightingType", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int fightingType
    {
      get { return _fightingType; }
      set { _fightingType = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"PBStartMatchResp")]
  public partial class PBStartMatchResp : global::ProtoBuf.IExtensible
  {
    public PBStartMatchResp() {}
    
    private int _matchTime;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"matchTime", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int matchTime
    {
      get { return _matchTime; }
      set { _matchTime = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}